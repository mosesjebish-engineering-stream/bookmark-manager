swagger: "2.0"
info:
  description: "This is part of the Bookmark Microservices"
  version: "1.0.0"
  title: "Bookmark Manager"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "mosesjebish@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "20.44.213.195"
basePath: "/v2"
tags:
  - name: "bookmark-manager"
    description: "Manager Bookmarks"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
schemes:
  - "https"
  - "http"
paths:
  /api/bookmarks/createGroup:
    post:
      tags:
        - "bookmark-manager"
      summary: "Add a new pet to the store"
      description: ""
      operationId: "addPet"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Group that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/GroupDetailDto"
      responses:
        "405":
          description: "Invalid input"
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    tokenUrl: "http://localhost:8080/oauth/token"
    flow: "password"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  GroupDetailDto:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      groupName:
        type: "string"
        format: "string"
      createdBy:
        type: "string"
        format: "string"
    xml:
      name: "GroupDetailDto"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Pet:
    type: "object"
    required:
      - "name"
      - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
          - "available"
          - "pending"
          - "sold"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"